// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.29.3
// source: contest.proto

package songcontestraterprotos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Heat int32

const (
	Heat_HEAT_UNSPECIFIED     Heat = 0
	Heat_HEAT_SEMI_FINAL      Heat = 1
	Heat_HEAT_FINAL           Heat = 2
	Heat_HEAT_1               Heat = 3
	Heat_HEAT_2               Heat = 4
	Heat_HEAT_3               Heat = 5
	Heat_HEAT_4               Heat = 6
	Heat_HEAT_5               Heat = 7
	Heat_HEAT_FINAL_QUALIFIER Heat = 8
)

// Enum value maps for Heat.
var (
	Heat_name = map[int32]string{
		0: "HEAT_UNSPECIFIED",
		1: "HEAT_SEMI_FINAL",
		2: "HEAT_FINAL",
		3: "HEAT_1",
		4: "HEAT_2",
		5: "HEAT_3",
		6: "HEAT_4",
		7: "HEAT_5",
		8: "HEAT_FINAL_QUALIFIER",
	}
	Heat_value = map[string]int32{
		"HEAT_UNSPECIFIED":     0,
		"HEAT_SEMI_FINAL":      1,
		"HEAT_FINAL":           2,
		"HEAT_1":               3,
		"HEAT_2":               4,
		"HEAT_3":               5,
		"HEAT_4":               6,
		"HEAT_5":               7,
		"HEAT_FINAL_QUALIFIER": 8,
	}
)

func (x Heat) Enum() *Heat {
	p := new(Heat)
	*p = x
	return p
}

func (x Heat) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Heat) Descriptor() protoreflect.EnumDescriptor {
	return file_contest_proto_enumTypes[0].Descriptor()
}

func (Heat) Type() protoreflect.EnumType {
	return &file_contest_proto_enumTypes[0]
}

func (x Heat) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Heat.Descriptor instead.
func (Heat) EnumDescriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{0}
}

type GetContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetContestRequest) Reset() {
	*x = GetContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContestRequest) ProtoMessage() {}

func (x *GetContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContestRequest.ProtoReflect.Descriptor instead.
func (*GetContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{0}
}

func (x *GetContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CreateContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Heat      Heat                   `protobuf:"varint,1,opt,name=heat,proto3,enum=songcontestrater.Heat" json:"heat,omitempty"`
	City      string                 `protobuf:"bytes,2,opt,name=city,proto3" json:"city,omitempty"`
	Country   string                 `protobuf:"bytes,3,opt,name=country,proto3" json:"country,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ImageUrl  string                 `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *CreateContestRequest) Reset() {
	*x = CreateContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateContestRequest) ProtoMessage() {}

func (x *CreateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateContestRequest.ProtoReflect.Descriptor instead.
func (*CreateContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{1}
}

func (x *CreateContestRequest) GetHeat() Heat {
	if x != nil {
		return x.Heat
	}
	return Heat_HEAT_UNSPECIFIED
}

func (x *CreateContestRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *CreateContestRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *CreateContestRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *CreateContestRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type UpdateContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Heat      Heat                   `protobuf:"varint,2,opt,name=heat,proto3,enum=songcontestrater.Heat" json:"heat,omitempty"`
	City      string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country   string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ImageUrl  string                 `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *UpdateContestRequest) Reset() {
	*x = UpdateContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateContestRequest) ProtoMessage() {}

func (x *UpdateContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateContestRequest.ProtoReflect.Descriptor instead.
func (*UpdateContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateContestRequest) GetHeat() Heat {
	if x != nil {
		return x.Heat
	}
	return Heat_HEAT_UNSPECIFIED
}

func (x *UpdateContestRequest) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *UpdateContestRequest) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *UpdateContestRequest) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *UpdateContestRequest) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type DeleteContestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteContestRequest) Reset() {
	*x = DeleteContestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteContestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteContestRequest) ProtoMessage() {}

func (x *DeleteContestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteContestRequest.ProtoReflect.Descriptor instead.
func (*DeleteContestRequest) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteContestRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ContestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Heat      Heat                   `protobuf:"varint,2,opt,name=heat,proto3,enum=songcontestrater.Heat" json:"heat,omitempty"`
	City      string                 `protobuf:"bytes,3,opt,name=city,proto3" json:"city,omitempty"`
	Country   string                 `protobuf:"bytes,4,opt,name=country,proto3" json:"country,omitempty"`
	StartTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	ImageUrl  string                 `protobuf:"bytes,6,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Acts      []*ActResponse         `protobuf:"bytes,7,rep,name=acts,proto3" json:"acts,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *ContestResponse) Reset() {
	*x = ContestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContestResponse) ProtoMessage() {}

func (x *ContestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContestResponse.ProtoReflect.Descriptor instead.
func (*ContestResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{4}
}

func (x *ContestResponse) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ContestResponse) GetHeat() Heat {
	if x != nil {
		return x.Heat
	}
	return Heat_HEAT_UNSPECIFIED
}

func (x *ContestResponse) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ContestResponse) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ContestResponse) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ContestResponse) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ContestResponse) GetActs() []*ActResponse {
	if x != nil {
		return x.Acts
	}
	return nil
}

func (x *ContestResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ContestResponse) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ListContestsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Contests []*ContestResponse `protobuf:"bytes,1,rep,name=contests,proto3" json:"contests,omitempty"`
}

func (x *ListContestsResponse) Reset() {
	*x = ListContestsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contest_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListContestsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContestsResponse) ProtoMessage() {}

func (x *ListContestsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_contest_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContestsResponse.ProtoReflect.Descriptor instead.
func (*ListContestsResponse) Descriptor() ([]byte, []int) {
	return file_contest_proto_rawDescGZIP(), []int{5}
}

func (x *ListContestsResponse) GetContests() []*ContestResponse {
	if x != nil {
		return x.Contests
	}
	return nil
}

var File_contest_proto protoreflect.FileDescriptor

var file_contest_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x73, 0x6f, 0x6e, 0x67, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65,
	0x72, 0x1a, 0x09, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x23, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x22, 0xc8, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x68,
	0x65, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61,
	0x74, 0x52, 0x04, 0x68, 0x65, 0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xd8, 0x01,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x74, 0x52, 0x04, 0x68, 0x65,
	0x61, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x39, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x26, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x22, 0xfc, 0x02, 0x0a, 0x0f, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x68, 0x65, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x16, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74,
	0x72, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x48, 0x65, 0x61, 0x74, 0x52, 0x04, 0x68, 0x65, 0x61, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x31, 0x0a, 0x04, 0x61, 0x63, 0x74, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x6f, 0x6e, 0x67, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x41, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x04, 0x61, 0x63, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x55, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x6f, 0x6e, 0x67,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x72, 0x61, 0x74, 0x65, 0x72, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x73, 0x74, 0x73, 0x2a, 0x97, 0x01, 0x0a, 0x04, 0x48, 0x65, 0x61, 0x74, 0x12,
	0x14, 0x0a, 0x10, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x53, 0x45,
	0x4d, 0x49, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x45,
	0x41, 0x54, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45,
	0x41, 0x54, 0x5f, 0x31, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x32,
	0x10, 0x04, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x33, 0x10, 0x05, 0x12, 0x0a,
	0x0a, 0x06, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x34, 0x10, 0x06, 0x12, 0x0a, 0x0a, 0x06, 0x48, 0x45,
	0x41, 0x54, 0x5f, 0x35, 0x10, 0x07, 0x12, 0x18, 0x0a, 0x14, 0x48, 0x45, 0x41, 0x54, 0x5f, 0x46,
	0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x46, 0x49, 0x45, 0x52, 0x10, 0x08,
	0x42, 0x1a, 0x5a, 0x18, 0x2e, 0x3b, 0x73, 0x6f, 0x6e, 0x67, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x65, 0x72, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contest_proto_rawDescOnce sync.Once
	file_contest_proto_rawDescData = file_contest_proto_rawDesc
)

func file_contest_proto_rawDescGZIP() []byte {
	file_contest_proto_rawDescOnce.Do(func() {
		file_contest_proto_rawDescData = protoimpl.X.CompressGZIP(file_contest_proto_rawDescData)
	})
	return file_contest_proto_rawDescData
}

var file_contest_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_contest_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_contest_proto_goTypes = []any{
	(Heat)(0),                     // 0: songcontestrater.Heat
	(*GetContestRequest)(nil),     // 1: songcontestrater.GetContestRequest
	(*CreateContestRequest)(nil),  // 2: songcontestrater.CreateContestRequest
	(*UpdateContestRequest)(nil),  // 3: songcontestrater.UpdateContestRequest
	(*DeleteContestRequest)(nil),  // 4: songcontestrater.DeleteContestRequest
	(*ContestResponse)(nil),       // 5: songcontestrater.ContestResponse
	(*ListContestsResponse)(nil),  // 6: songcontestrater.ListContestsResponse
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*ActResponse)(nil),           // 8: songcontestrater.ActResponse
}
var file_contest_proto_depIdxs = []int32{
	0,  // 0: songcontestrater.CreateContestRequest.heat:type_name -> songcontestrater.Heat
	7,  // 1: songcontestrater.CreateContestRequest.start_time:type_name -> google.protobuf.Timestamp
	0,  // 2: songcontestrater.UpdateContestRequest.heat:type_name -> songcontestrater.Heat
	7,  // 3: songcontestrater.UpdateContestRequest.start_time:type_name -> google.protobuf.Timestamp
	0,  // 4: songcontestrater.ContestResponse.heat:type_name -> songcontestrater.Heat
	7,  // 5: songcontestrater.ContestResponse.start_time:type_name -> google.protobuf.Timestamp
	8,  // 6: songcontestrater.ContestResponse.acts:type_name -> songcontestrater.ActResponse
	7,  // 7: songcontestrater.ContestResponse.created_at:type_name -> google.protobuf.Timestamp
	7,  // 8: songcontestrater.ContestResponse.updated_at:type_name -> google.protobuf.Timestamp
	5,  // 9: songcontestrater.ListContestsResponse.contests:type_name -> songcontestrater.ContestResponse
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_contest_proto_init() }
func file_contest_proto_init() {
	if File_contest_proto != nil {
		return
	}
	file_act_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contest_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*GetContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contest_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CreateContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contest_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*UpdateContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contest_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*DeleteContestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contest_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*ContestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contest_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListContestsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contest_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contest_proto_goTypes,
		DependencyIndexes: file_contest_proto_depIdxs,
		EnumInfos:         file_contest_proto_enumTypes,
		MessageInfos:      file_contest_proto_msgTypes,
	}.Build()
	File_contest_proto = out.File
	file_contest_proto_rawDesc = nil
	file_contest_proto_goTypes = nil
	file_contest_proto_depIdxs = nil
}
